<UserControl x:Class="Piet.IntegerUpDown"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background"
                         Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border"
                         Color="#FF707070" />
        <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border"
                         Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="#FF838383" />
        <Style x:Key="BaseButtonStyle"
               TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource HomeSettingsTileBackgroundColor}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource HomeSettingsTileBackgroundColor}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource HomeSettingsTileBackgroundColor}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource HomeSettingsTileBackgroundColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonStyle"
               BasedOn="{StaticResource BaseButtonStyle}"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="Stylus.IsPressAndHoldEnabled"
                    Value="false" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="13" />
            <RowDefinition Height="13" />
        </Grid.RowDefinitions>
        <TextBox Name="textBox"
                 Text=""
                 IsHitTestVisible="False"
                 VerticalContentAlignment="Center"
                 Grid.Column="0"
                 Background="Transparent"
                 BorderBrush="Transparent"
                 Grid.Row="0"
                 Grid.RowSpan="2"
                 TextAlignment="Right"
                 TextChanged="TextBoxChanged"
                 FontFamily="/Piet;component/resources/#Roboto"
                 FontSize="14" />
        <RepeatButton Name="buttonUp"
                      Background="Transparent"
                      Padding="0"
                      BorderBrush="Transparent"
                      Grid.Column="1"
                      Grid.Row="0"
                      VerticalContentAlignment="Bottom"
                      HorizontalContentAlignment="Center"
                      Click="ButtonUpClick"
                      Style="{DynamicResource RepeatButtonStyle}">
            <Path Margin="0,0,0,2"
                  x:Name="buttonUpArrow"
                  Fill="Black"
                  Data="M.33,4.68,3.09,1.93a1.3,1.3,0,0,1,1.84,0L7.69,4.68A1,1,0,0,1,7,6.42H1.05A1,1,0,0,1,.33,4.68Z" />
        </RepeatButton>
        <RepeatButton Name="buttonDown"
                      Style="{DynamicResource RepeatButtonStyle}"
                      Background="Transparent"
                      BorderBrush="Transparent"
                      Grid.Column="1"
                      Grid.Row="1"
                      Padding="0"
                      VerticalContentAlignment="Top"
                      HorizontalContentAlignment="Center"
                      Height="13"
                      VerticalAlignment="Bottom"
                      Click="ButtonDownClick">
            <Path x:Name="buttonDownArrow"
                  Fill="Black"
                  Data="M7.69,3.28,4.93,6A1.3,1.3,0,0,1,3.09,6L.33,3.28a1,1,0,0,1,.72-1.73H7A1,1,0,0,1,7.69,3.28Z" />
        </RepeatButton>
    </Grid>
</UserControl>
